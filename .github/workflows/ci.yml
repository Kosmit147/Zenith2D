name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.config.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows VS2022, os: windows-2022  }
        - { name: Windows GCC, os: windows-2022, flags: -G "MinGW Makefiles" -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++  }
        # - { name: Linux GCC,      os: ubuntu-latest }
        # - { name: Linux Clang,    os: ubuntu-latest, flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        - { name: macOS,          os: macos-latest  }
        config:
        # - { name: Shared, flags: -DBUILD_SHARED_LIBS=TRUE }
        - { name: Static, flags: -DBUILD_SHARED_LIBS=FALSE }

    steps:
    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev

    # - name: Add GCC to path on Windows
    #   if: matrix.platform.name == 'Windows GCC'
    #   # run: $env:PATH = "C:\msys64\ucrt64\bin;C:\msys64\usr\bin;$env:PATH"
    #   run: set PATH=%PATH%;C:\msys64\ucrt64\bin;C:\msys64\usr\bin;

    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure
      run: cmake -B build ${{matrix.platform.flags}} ${{matrix.config.flags}}

    - name: Build
      run: cmake --build build --config Release
