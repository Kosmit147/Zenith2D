#include "Zenith/Platform/Input/Keyboard.hpp"

namespace zth {

Key to_key(sf::Keyboard::Scancode code)
{
    switch (code)
    {
    case sf::Keyboard::Scancode::Unknown:
        return Key::Unknown;
    case sf::Keyboard::Scancode::A:
        return Key::A;
    case sf::Keyboard::Scancode::B:
        return Key::B;
    case sf::Keyboard::Scancode::C:
        return Key::C;
    case sf::Keyboard::Scancode::D:
        return Key::D;
    case sf::Keyboard::Scancode::E:
        return Key::E;
    case sf::Keyboard::Scancode::F:
        return Key::F;
    case sf::Keyboard::Scancode::G:
        return Key::G;
    case sf::Keyboard::Scancode::H:
        return Key::H;
    case sf::Keyboard::Scancode::I:
        return Key::I;
    case sf::Keyboard::Scancode::J:
        return Key::J;
    case sf::Keyboard::Scancode::K:
        return Key::K;
    case sf::Keyboard::Scancode::L:
        return Key::L;
    case sf::Keyboard::Scancode::M:
        return Key::M;
    case sf::Keyboard::Scancode::N:
        return Key::N;
    case sf::Keyboard::Scancode::O:
        return Key::O;
    case sf::Keyboard::Scancode::P:
        return Key::P;
    case sf::Keyboard::Scancode::Q:
        return Key::Q;
    case sf::Keyboard::Scancode::R:
        return Key::R;
    case sf::Keyboard::Scancode::S:
        return Key::S;
    case sf::Keyboard::Scancode::T:
        return Key::T;
    case sf::Keyboard::Scancode::U:
        return Key::U;
    case sf::Keyboard::Scancode::V:
        return Key::V;
    case sf::Keyboard::Scancode::W:
        return Key::W;
    case sf::Keyboard::Scancode::X:
        return Key::X;
    case sf::Keyboard::Scancode::Y:
        return Key::Y;
    case sf::Keyboard::Scancode::Z:
        return Key::Z;
    case sf::Keyboard::Scancode::Num1:
        return Key::Num1;
    case sf::Keyboard::Scancode::Num2:
        return Key::Num2;
    case sf::Keyboard::Scancode::Num3:
        return Key::Num3;
    case sf::Keyboard::Scancode::Num4:
        return Key::Num4;
    case sf::Keyboard::Scancode::Num5:
        return Key::Num5;
    case sf::Keyboard::Scancode::Num6:
        return Key::Num6;
    case sf::Keyboard::Scancode::Num7:
        return Key::Num7;
    case sf::Keyboard::Scancode::Num8:
        return Key::Num8;
    case sf::Keyboard::Scancode::Num9:
        return Key::Num9;
    case sf::Keyboard::Scancode::Num0:
        return Key::Num0;
    case sf::Keyboard::Scancode::Enter:
        return Key::Enter;
    case sf::Keyboard::Scancode::Escape:
        return Key::Escape;
    case sf::Keyboard::Scancode::Backspace:
        return Key::Backspace;
    case sf::Keyboard::Scancode::Tab:
        return Key::Tab;
    case sf::Keyboard::Scancode::Space:
        return Key::Space;
    case sf::Keyboard::Scancode::Hyphen:
        return Key::Hyphen;
    case sf::Keyboard::Scancode::Equal:
        return Key::Equal;
    case sf::Keyboard::Scancode::LBracket:
        return Key::LBracket;
    case sf::Keyboard::Scancode::RBracket:
        return Key::RBracket;
    case sf::Keyboard::Scancode::Backslash:
        return Key::Backslash;
    case sf::Keyboard::Scancode::Semicolon:
        return Key::Semicolon;
    case sf::Keyboard::Scancode::Apostrophe:
        return Key::Apostrophe;
    case sf::Keyboard::Scancode::Grave:
        return Key::Grave;
    case sf::Keyboard::Scancode::Comma:
        return Key::Comma;
    case sf::Keyboard::Scancode::Period:
        return Key::Period;
    case sf::Keyboard::Scancode::Slash:
        return Key::Slash;
    case sf::Keyboard::Scancode::F1:
        return Key::F1;
    case sf::Keyboard::Scancode::F2:
        return Key::F2;
    case sf::Keyboard::Scancode::F3:
        return Key::F3;
    case sf::Keyboard::Scancode::F4:
        return Key::F4;
    case sf::Keyboard::Scancode::F5:
        return Key::F5;
    case sf::Keyboard::Scancode::F6:
        return Key::F6;
    case sf::Keyboard::Scancode::F7:
        return Key::F7;
    case sf::Keyboard::Scancode::F8:
        return Key::F8;
    case sf::Keyboard::Scancode::F9:
        return Key::F9;
    case sf::Keyboard::Scancode::F10:
        return Key::F10;
    case sf::Keyboard::Scancode::F11:
        return Key::F11;
    case sf::Keyboard::Scancode::F12:
        return Key::F12;
    case sf::Keyboard::Scancode::F13:
        return Key::F13;
    case sf::Keyboard::Scancode::F14:
        return Key::F14;
    case sf::Keyboard::Scancode::F15:
        return Key::F15;
    case sf::Keyboard::Scancode::F16:
        return Key::F16;
    case sf::Keyboard::Scancode::F17:
        return Key::F17;
    case sf::Keyboard::Scancode::F18:
        return Key::F18;
    case sf::Keyboard::Scancode::F19:
        return Key::F19;
    case sf::Keyboard::Scancode::F20:
        return Key::F20;
    case sf::Keyboard::Scancode::F21:
        return Key::F21;
    case sf::Keyboard::Scancode::F22:
        return Key::F22;
    case sf::Keyboard::Scancode::F23:
        return Key::F23;
    case sf::Keyboard::Scancode::F24:
        return Key::F24;
    case sf::Keyboard::Scancode::CapsLock:
        return Key::CapsLock;
    case sf::Keyboard::Scancode::PrintScreen:
        return Key::PrintScreen;
    case sf::Keyboard::Scancode::ScrollLock:
        return Key::ScrollLock;
    case sf::Keyboard::Scancode::Pause:
        return Key::Pause;
    case sf::Keyboard::Scancode::Insert:
        return Key::Insert;
    case sf::Keyboard::Scancode::Home:
        return Key::Home;
    case sf::Keyboard::Scancode::PageUp:
        return Key::PageUp;
    case sf::Keyboard::Scancode::Delete:
        return Key::Delete;
    case sf::Keyboard::Scancode::End:
        return Key::End;
    case sf::Keyboard::Scancode::PageDown:
        return Key::PageDown;
    case sf::Keyboard::Scancode::Right:
        return Key::Right;
    case sf::Keyboard::Scancode::Left:
        return Key::Left;
    case sf::Keyboard::Scancode::Down:
        return Key::Down;
    case sf::Keyboard::Scancode::Up:
        return Key::Up;
    case sf::Keyboard::Scancode::NumLock:
        return Key::NumLock;
    case sf::Keyboard::Scancode::NumpadDivide:
        return Key::NumpadDivide;
    case sf::Keyboard::Scancode::NumpadMultiply:
        return Key::NumpadMultiply;
    case sf::Keyboard::Scancode::NumpadMinus:
        return Key::NumpadMinus;
    case sf::Keyboard::Scancode::NumpadPlus:
        return Key::NumpadPlus;
    case sf::Keyboard::Scancode::NumpadEqual:
        return Key::NumpadEqual;
    case sf::Keyboard::Scancode::NumpadEnter:
        return Key::NumpadEnter;
    case sf::Keyboard::Scancode::NumpadDecimal:
        return Key::NumpadDecimal;
    case sf::Keyboard::Scancode::Numpad1:
        return Key::Numpad1;
    case sf::Keyboard::Scancode::Numpad2:
        return Key::Numpad2;
    case sf::Keyboard::Scancode::Numpad3:
        return Key::Numpad3;
    case sf::Keyboard::Scancode::Numpad4:
        return Key::Numpad4;
    case sf::Keyboard::Scancode::Numpad5:
        return Key::Numpad5;
    case sf::Keyboard::Scancode::Numpad6:
        return Key::Numpad6;
    case sf::Keyboard::Scancode::Numpad7:
        return Key::Numpad7;
    case sf::Keyboard::Scancode::Numpad8:
        return Key::Numpad8;
    case sf::Keyboard::Scancode::Numpad9:
        return Key::Numpad9;
    case sf::Keyboard::Scancode::Numpad0:
        return Key::Numpad0;
    case sf::Keyboard::Scancode::NonUsBackslash:
        return Key::NonUsBackslash;
    case sf::Keyboard::Scancode::Application:
        return Key::Application;
    case sf::Keyboard::Scancode::Execute:
        return Key::Execute;
    case sf::Keyboard::Scancode::ModeChange:
        return Key::ModeChange;
    case sf::Keyboard::Scancode::Help:
        return Key::Help;
    case sf::Keyboard::Scancode::Menu:
        return Key::Menu;
    case sf::Keyboard::Scancode::Select:
        return Key::Select;
    case sf::Keyboard::Scancode::Redo:
        return Key::Redo;
    case sf::Keyboard::Scancode::Undo:
        return Key::Undo;
    case sf::Keyboard::Scancode::Cut:
        return Key::Cut;
    case sf::Keyboard::Scancode::Copy:
        return Key::Copy;
    case sf::Keyboard::Scancode::Paste:
        return Key::Paste;
    case sf::Keyboard::Scancode::VolumeMute:
        return Key::VolumeMute;
    case sf::Keyboard::Scancode::VolumeUp:
        return Key::VolumeUp;
    case sf::Keyboard::Scancode::VolumeDown:
        return Key::VolumeDown;
    case sf::Keyboard::Scancode::MediaPlayPause:
        return Key::MediaPlayPause;
    case sf::Keyboard::Scancode::MediaStop:
        return Key::MediaStop;
    case sf::Keyboard::Scancode::MediaNextTrack:
        return Key::MediaNextTrack;
    case sf::Keyboard::Scancode::MediaPreviousTrack:
        return Key::MediaPreviousTrack;
    case sf::Keyboard::Scancode::LControl:
        return Key::LControl;
    case sf::Keyboard::Scancode::LShift:
        return Key::LShift;
    case sf::Keyboard::Scancode::LAlt:
        return Key::LAlt;
    case sf::Keyboard::Scancode::LSystem:
        return Key::LSystem;
    case sf::Keyboard::Scancode::RControl:
        return Key::RControl;
    case sf::Keyboard::Scancode::RShift:
        return Key::RShift;
    case sf::Keyboard::Scancode::RAlt:
        return Key::RAlt;
    case sf::Keyboard::Scancode::RSystem:
        return Key::RSystem;
    case sf::Keyboard::Scancode::Back:
        return Key::Back;
    case sf::Keyboard::Scancode::Forward:
        return Key::Forward;
    case sf::Keyboard::Scancode::Refresh:
        return Key::Refresh;
    case sf::Keyboard::Scancode::Stop:
        return Key::Stop;
    case sf::Keyboard::Scancode::Search:
        return Key::Search;
    case sf::Keyboard::Scancode::Favorites:
        return Key::Favorites;
    case sf::Keyboard::Scancode::HomePage:
        return Key::HomePage;
    case sf::Keyboard::Scancode::LaunchApplication1:
        return Key::LaunchApplication1;
    case sf::Keyboard::Scancode::LaunchApplication2:
        return Key::LaunchApplication2;
    case sf::Keyboard::Scancode::LaunchMail:
        return Key::LaunchMail;
    case sf::Keyboard::Scancode::LaunchMediaSelect:
        return Key::LaunchMediaSelect;
    case sf::Keyboard::Scancode::ScancodeCount:
        break;
    }

    assert(false);
    return Key::Unknown;
}

const char* to_string(Key key)
{
    switch (key)
    {
        using enum Key;
    case Unknown:
        return "Unknown";
    case A:
        return "A";
    case B:
        return "B";
    case C:
        return "C";
    case D:
        return "D";
    case E:
        return "E";
    case F:
        return "F";
    case G:
        return "G";
    case H:
        return "H";
    case I:
        return "I";
    case J:
        return "J";
    case K:
        return "K";
    case L:
        return "L";
    case M:
        return "M";
    case N:
        return "N";
    case O:
        return "O";
    case P:
        return "P";
    case Q:
        return "Q";
    case R:
        return "R";
    case S:
        return "S";
    case T:
        return "T";
    case U:
        return "U";
    case V:
        return "V";
    case W:
        return "W";
    case X:
        return "X";
    case Y:
        return "Y";
    case Z:
        return "Z";
    case Num1:
        return "Num1";
    case Num2:
        return "Num2";
    case Num3:
        return "Num3";
    case Num4:
        return "Num4";
    case Num5:
        return "Num5";
    case Num6:
        return "Num6";
    case Num7:
        return "Num7";
    case Num8:
        return "Num8";
    case Num9:
        return "Num9";
    case Num0:
        return "Num0";
    case Enter:
        return "Enter";
    case Escape:
        return "Escape";
    case Backspace:
        return "Backspace";
    case Tab:
        return "Tab";
    case Space:
        return "Space";
    case Hyphen:
        return "Hyphen";
    case Equal:
        return "Equal";
    case LBracket:
        return "LBracket";
    case RBracket:
        return "RBracket";
    case Backslash:
        return "Backslash";
    case Semicolon:
        return "Semicolon";
    case Apostrophe:
        return "Apostrophe";
    case Grave:
        return "Grave";
    case Comma:
        return "Comma";
    case Period:
        return "Period";
    case Slash:
        return "Slash";
    case F1:
        return "F1";
    case F2:
        return "F2";
    case F3:
        return "F3";
    case F4:
        return "F4";
    case F5:
        return "F5";
    case F6:
        return "F6";
    case F7:
        return "F7";
    case F8:
        return "F8";
    case F9:
        return "F9";
    case F10:
        return "F10";
    case F11:
        return "F11";
    case F12:
        return "F12";
    case F13:
        return "F13";
    case F14:
        return "F14";
    case F15:
        return "F15";
    case F16:
        return "F16";
    case F17:
        return "F17";
    case F18:
        return "F18";
    case F19:
        return "F19";
    case F20:
        return "F20";
    case F21:
        return "F21";
    case F22:
        return "F22";
    case F23:
        return "F23";
    case F24:
        return "F24";
    case CapsLock:
        return "CapsLock";
    case PrintScreen:
        return "PrintScreen";
    case ScrollLock:
        return "ScrollLock";
    case Pause:
        return "Pause";
    case Insert:
        return "Insert";
    case Home:
        return "Home";
    case PageUp:
        return "PageUp";
    case Delete:
        return "Delete";
    case End:
        return "End";
    case PageDown:
        return "PageDown";
    case Right:
        return "Right";
    case Left:
        return "Left";
    case Down:
        return "Down";
    case Up:
        return "Up";
    case NumLock:
        return "NumLock";
    case NumpadDivide:
        return "NumpadDivide";
    case NumpadMultiply:
        return "NumpadMultiply";
    case NumpadMinus:
        return "NumpadMinus";
    case NumpadPlus:
        return "NumpadPlus";
    case NumpadEqual:
        return "NumpadEqual";
    case NumpadEnter:
        return "NumpadEnter";
    case NumpadDecimal:
        return "NumpadDecimal";
    case Numpad1:
        return "Numpad1";
    case Numpad2:
        return "Numpad2";
    case Numpad3:
        return "Numpad3";
    case Numpad4:
        return "Numpad4";
    case Numpad5:
        return "Numpad5";
    case Numpad6:
        return "Numpad6";
    case Numpad7:
        return "Numpad7";
    case Numpad8:
        return "Numpad8";
    case Numpad9:
        return "Numpad9";
    case Numpad0:
        return "Numpad0";
    case NonUsBackslash:
        return "NonUsBackslash";
    case Application:
        return "Application";
    case Execute:
        return "Execute";
    case ModeChange:
        return "ModeChange";
    case Help:
        return "Help";
    case Menu:
        return "Menu";
    case Select:
        return "Select";
    case Redo:
        return "Redo";
    case Undo:
        return "Undo";
    case Cut:
        return "Cut";
    case Copy:
        return "Copy";
    case Paste:
        return "Paste";
    case VolumeMute:
        return "VolumeMute";
    case VolumeUp:
        return "VolumeUp";
    case VolumeDown:
        return "VolumeDown";
    case MediaPlayPause:
        return "MediaPlayPause";
    case MediaStop:
        return "MediaStop";
    case MediaNextTrack:
        return "MediaNextTrack";
    case MediaPreviousTrack:
        return "MediaPreviousTrack";
    case LControl:
        return "LControl";
    case LShift:
        return "LShift";
    case LAlt:
        return "LAlt";
    case LSystem:
        return "LSystem";
    case RControl:
        return "RControl";
    case RShift:
        return "RShift";
    case RAlt:
        return "RAlt";
    case RSystem:
        return "RSystem";
    case Back:
        return "Back";
    case Forward:
        return "Forward";
    case Refresh:
        return "Refresh";
    case Stop:
        return "Stop";
    case Search:
        return "Search";
    case Favorites:
        return "Favorites";
    case HomePage:
        return "HomePage";
    case LaunchApplication1:
        return "LaunchApplication1";
    case LaunchApplication2:
        return "LaunchApplication2";
    case LaunchMail:
        return "LaunchMail";
    case LaunchMediaSelect:
        return "LaunchMediaSelect";
    }

    assert(false);
    return "Unknown";
}

} // namespace zth
